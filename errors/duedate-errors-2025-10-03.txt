DUE DATE LOG ERROR REPORT
Generated: 2025-10-03T13:02:56.315Z
Date: 2025-10-03
Source File: dueDateLogs-2025-10-03.txt
Status: NO ERRORS FOUND
Detected by: Gemini AI

==============================================
ANALYSIS RESULT:
==============================================

```python
import re

log_content = """
[2025-09-30 03:42:48.708] 
============================================================
[2025-09-30 03:42:48.710] DUE DATE UPDATE SCRIPT EXECUTION
[2025-09-30 03:42:48.712] Timestamp: 2025-09-30 03:42:48 UTC
[2025-09-30 03:42:48.713] ============================================================

[2025-09-30 03:42:48.715] Bill Payment ID: 5324860
[2025-09-30 03:42:48.716] Script triggered by: view
[2025-09-30 03:42:48.717] User: System

[2025-09-30 03:42:48.866] Bill payment record loaded successfully. Type: vendorpayment, ID: 5324860
[2025-09-30 03:42:48.870] Bill payment amount retrieved: 200
[2025-09-30 03:42:48.894] Payment details - Items Count: 1, Payment Status: Confirmed, Payment Method: 7, UTR Date: 10/8/2025
[2025-09-30 03:42:48.896] CONDITION MET: UTR date exists and payment method is 7 (Sambitron) - Entering UTR Flow
[2025-09-30 03:42:48.899] 
--- Processing Apply Item 1 of 1 ---
[2025-09-30 03:42:48.905] Processing item 0: Apply=true, Transaction Type=VendBill
[2025-09-30 03:42:48.906] Bill ID retrieved: 5296114 for iteration 0
[2025-09-30 03:42:48.950] Bill form check: 219 (should not be 338)
[2025-09-30 03:42:53.451] Invoice ID retrieved: 5296021 from bill 5296114
[2025-09-30 03:42:54.609] Installment Number: 2, Sales Order ID: 5296009
[2025-09-30 03:42:54.614] Payment confirmed - proceeding with due date updates for Bill: 5296114, Invoice: 5296021
[2025-09-30 03:42:55.782] Bill 5296114 updated with supplier payment date: 10/8/2025
[2025-09-30 03:42:56.282] Transaction origin: Supplier Originated, Repayment select: 2
[2025-09-30 03:42:56.288] OVERRIDE: Using supplier payment days (10) instead of installment days (10)
[2025-09-30 03:42:56.291] Processing installment 0: Milestone="On Supplier Payment", Days to add=10
[2025-09-30 03:42:56.293] 
=== SIMPLE UTR DATE CHECK ===
[2025-09-30 03:42:56.295] Invoice: 5296021
[2025-09-30 03:42:56.297] Current UTR: 10/8/2025
[2025-09-30 03:42:56.303] AP Bill ID: 5296114
[2025-09-30 03:42:56.305] Searching for all payments to debug status values...
[2025-09-30 03:42:56.318] Found 1 payments total (before status filtering)
[2025-09-30 03:42:56.320] Payment 5324860: Status Text='Confirmed', Status Value='confirmed'
[2025-09-30 03:42:56.322] ??? Payment 5324860 is confirmed
[2025-09-30 03:42:56.324] After manual status filtering: 1 confirmed payments
[2025-09-30 03:42:56.326] Payment 5324860 (Confirmed): UTR 10/8/2025
[2025-09-30 03:42:56.328] 
[2025-09-30 03:42:56.330] 
Earliest UTR Date: 10/8/2025 (Changed: NO)
[2025-09-30 03:42:56.333] === END UTR DATE CHECK ===

[2025-09-30 03:42:56.340] Original calculated due date stored (UTR): 20/8/2025
[2025-09-30 03:42:56.358] Holiday check for date 20/8/2025: Not Holiday
[2025-09-30 03:42:56.363] Due date calculated: Original=20/8/2025, Adjusted=20/8/2025
[2025-09-30 03:42:56.369] 
*** SUPPLIER ORIGINATED FLOW ***
[2025-09-30 03:42:56.373] Supplier originated flow - Grace period: 0 days
[2025-09-30 03:42:56.374] BEFORE calling getEarliestUtrDate:
[2025-09-30 03:42:56.376] - Invoice ID: 5296021
[2025-09-30 03:42:56.378] - Current Bill Payment ID: 5324860
[2025-09-30 03:42:56.379] - Current UTR Date: 10/8/2025
[2025-09-30 03:42:56.381] 
=== SIMPLE UTR DATE CHECK ===
[2025-09-30 03:42:56.382] Invoice: 5296021
[2025-09-30 03:42:56.384] Current UTR: 10/8/2025
[2025-09-30 03:42:56.390] AP Bill ID: 5296114
[2025-09-30 03:42:56.392] Searching for all payments to debug status values...
[2025-09-30 03:42:56.400] Found 1 payments total (before status filtering)
[2025-09-30 03:42:56.402] Payment 5324860: Status Text='Confirmed', Status Value='confirmed'
[2025-09-30 03:42:56.404] ??? Payment 5324860 is confirmed
[2025-09-30 03:42:56.405] After manual status filtering: 1 confirmed payments
[2025-09-30 03:42:56.407] Payment 5324860 (Confirmed): UTR 10/8/2025
[2025-09-30 03:42:56.409] 
[2025-09-30 03:42:56.410] 
Earliest UTR Date: 10/8/2025 (Changed: NO)
[2025-09-30 03:42:56.412] === END UTR DATE CHECK ===

[2025-09-30 03:42:56.413] AFTER calling getEarliestUtrDate:
[2025-09-30 03:42:56.415] - Returned Date: 10/8/2025
[2025-09-30 03:42:56.416] - Is Same as Input: YES
[2025-09-30 03:42:56.418] BEFORE calling getEarliestUtrDate:
[2025-09-30 03:42:56.420] - Invoice ID: 5296021
[2025-09-30 03:42:56.421] - Current Bill Payment ID: 5324860
[2025-09-30 03:42:56.423] - Current UTR Date: 10/8/2025
[2025-09-30 03:42:56.425] AFTER calling getEarliestUtrDate:
[2025-09-30 03:42:56.427] - Returned Date: 10/8/2025
[2025-09-30 03:42:56.428] - Is Same as Input: YES
[2025-09-30 03:42:56.437] Due date criteria set to: 1
[2025-09-30 03:42:57.932] SCRIPT ERROR:
Bill Payment ID: 5324860
Error Name: CANNOT_CHANGE_INVOICE_PAID_INSTALLMENTS
Error Message: After a payment is applied to an installment, you cannot change the Due Date field nor the Amount field.
Parameters Used: billPayId: 5324860, billPaymentAmount: 200, utrGeneratedDate: 10/8/2025
iterationNo: 0, billId: 5296114, invoiceId: 5296021
Stack: Error
    at RecordInvoker.save (suitescript/resources/javascript/record/serverRecordService.js:371:13)
    at NetSuiteObject.thenableFunction() (suitescript/resources/javascript/record/proxy.js:115:24)
    at Object.updateDueDate (/SuiteScripts/updateDueDateSS-V2.js:1155:55)

[2025-09-30 03:43:06.591] 
"""

errors = []
log_lines = log_content.splitlines()
i = 0

while i < len(log_lines):
    line = log_lines[i]
    if "SCRIPT ERROR:" in line:
        error_data = {}
        
        # Extract timestamp from the SCRIPT ERROR line
        timestamp_match = re.match(r'^\[(\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{3})\]', line)
        if timestamp_match:
            error_data['timestamp'] = timestamp_match.group(1)
        
        # Read subsequent lines for error details
        j = i + 1
        # Continue reading until a new timestamped line or an empty line is encountered
        while j < len(log_lines) and not log_lines[j].strip().startswith('[') and log_lines[j].strip() != '':
            sub_line = log_lines[j].strip()
            
            if sub_line.startswith("Bill Payment ID:"):
                error_data['bill_payment_id'] = sub_line.split(":", 1)[1].strip()
            elif sub_line.startswith("Error Name:"):
                error_data['error_name'] = sub_line.split(":", 1)[1].strip()
            elif sub_line.startswith("Error Message:"):
                error_data['error_message'] = sub_line.split(":", 1)[1].strip()
            elif sub_line.startswith("Parameters Used:"):
                # Extract multiple parameters from this line using regex
                params_match = re.search(
                    r'billPayId: (\d+), billPaymentAmount: (\d+), utrGeneratedDate: (\d{1,2}\/\d{1,2}\/\d{4}).*billId: (\d+), invoiceId: (\d+)', 
                    sub_line
                )
                if params_match:
                    # error_data['params_bill_pay_id'] = params_match.group(1) # Not needed as per output format, use the dedicated line
                    error_data['amount'] = params_match.group(2)
                    error_data['utr_date'] = params_match.group(3)
                    error_data['bill_id'] = params_match.group(4)
                    error_data['invoice_id'] = params_match.group(5)
            # Stack trace lines are ignored as per output format
            j += 1
        
        errors.append(error_data)
        i = j # Move the main pointer past the current error block
    else:
        i += 1

# Format and print the extracted errors
if not errors:
    print("NO ERRORS DETECTED")
else:
    for idx, error in enumerate(errors):
        print(f"Error {idx + 1}: {error.get('timestamp', 'N/A')}")
        print(f"   Type: Script Error")
        

[WARNING: Analysis may be incomplete - response was truncated due to length]

The Due Date system appears to be running normally.

==============================================
END OF REPORT
==============================================